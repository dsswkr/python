# 실력 향상 예제 74-1

#----------------------------------------------------------------------
# 원에 존재하는 세 점인지 확인 (반환값: 1=가능, 0=불가능) 
def check_points(x1, y1, x2, y2, x3, y3):
  # 세 점이 일직선에 있거나, 두 점이 같은 경우에 원 중심점을 구할 수 없음 
  return (int(x2)-int(x1))*(int(y3)-int(y2)) - (int(y2)-int(y1))*(int(x3)-int(x2))

#----------------------------------------------------------------------
# 세 점의 중심점을 구하는 함수 
def get_center(pos): 
  x1,y1,x2,y2,x3,y3 = pos

  if check_points(x1, y1, x2, y2, x3, y3) == 0:
    return None, None   # 찾을 수 없음

  dx1 = x2 - x1;
  dy1 = y2 - y1;
  dx2 = x3 - x1;
  dy2 = y3 - y1;

  a = dx1 * (x1 + x2) + dy1 * (y1 + y2);
  b = dx2 * (x1 + x3) + dy2 * (y1 + y3);
  k = 2.0 * (dx1 * (y3 - y2) - dy1 * (x3 - x2));

  xp = (dy2 * a - dy1 * b) / k;
  yp = (dx1 * b - dx2 * a) / k;
  
  return int(xp), int(yp);


#-------------------------------------------------------------------
# 메인 처리
#-------------------------------------------------------------------
p1 = [ -10, 0, 0, 10, 0, -10 ]  # 예제 데이터 1; 중심점 (0, 0) 
p2 = [ 2, -1, 0, 1, 2, 3 ]      # 예제 데이터 2; 중심점 (2, 1) 
p3 = [ 0, -5, 5, -10, 10, -5 ]  # 예제 데이터 3; 중심점 (5, -5) 
p4 = [ 0, 0, 1, 1, 2, 2 ]       # 예제 데이터 3; 구할 수 없음

ps = [p1, p2, p3, p4]

#4개 데이터에 대한 결과를 출력함
for p in ps:
  x, y = get_center(p)
  if (x == None):     print("세 점의 중심점을 찾을 수 없습니다.")
  else:     print("세 점의 중심점은 (%i, %i)입니다." %(x, y))








