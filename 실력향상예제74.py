# 실력 향상 예제 74
MAX_X = 500
MAX_Y = 500
MIN_X = -500
MIN_Y = -500

#----------------------------------------------------------------------
# 원에 존재하는 세 점인지 확인 (반환값: 1=가능, 0=불가능) 
def check_points(x1, y1, x2, y2, x3, y3):
  # 세 점이 일직선에 있거나, 두 점이 같은 경우에 원 중심점을 구할 수 없음 
  return (int(x2)-int(x1))*(int(y3)-int(y2)) - (int(y2)-int(y1))*(int(x3)-int(x2))

#----------------------------------------------------------------------
# 세 점의 중심점을 구하는 함수 
def get_center(pos): 
  x1, y1, x2, y2, x3, y3 = pos

  if check_points(x1, y1, x2, y2, x3, y3) == 0:
    return None, None   # 찾을 수 없음

  # 세 점에서 중심에 이르는 거리가 같음을 이용하여 반복 탐색 (단, 정수 단위) 
  for x in range(MIN_X, MAX_X+1): 
    for y in range(MIN_Y, MAX_Y+1):
      d1 = (x - x1)*(x - x1) + (y - y1)*(y - y1)
      d2 = (x - x2)*(x - x2) + (y - y2)*(y - y2)
      if d1 == d2:
        d3 = (x - x3)*(x - x3) + (y - y3)*(y - y3)
        if d2 == d3:
          return x, y   # 찾았음
        
  return None, None   # 찾을 수 없음

#-------------------------------------------------------------------
# 메인 처리
#-------------------------------------------------------------------

p1 = [ -10, 0, 0, 10, 0, -10 ]  # 예제 데이터 1; 중심점 (0, 0) 
p2 = [ 2, -1, 0, 1, 2, 3 ]      # 예제 데이터 2; 중심점 (2, 1) 
p3 = [ 0, -5, 5, -10, 10, -5 ]  # 예제 데이터 3; 중심점 (5, -5) 
p4 = [ 0, 0, 1, 1, 2, 2 ]       # 예제 데이터 3; 구할 수 없음

ps = [p1, p2, p3, p4]

# 4개 데이터에 대한 결과를 출력함
for p in ps:
  x, y = get_center(p)
  if (x == None):     print("세 점의 중심점을 찾을 수 없습니다.")
  else:     print("세 점의 중심점은 (%.0f, %.0f)입니다." %(x, y))


